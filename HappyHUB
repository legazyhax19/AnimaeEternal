-- ======= ‡πÇ‡∏´‡∏•‡∏î Fluent GUI =======
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Window = Fluent:CreateWindow({
    Title = "HappyHUB",
    SubTitle = "By Legazyhax19",
    TabWidth = 160,
    Size = UDim2.fromOffset(520, 400),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "swords" })
}

-- ======= ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô =======
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå
local monsterMap = {} -- [‡∏ä‡∏∑‡πà‡∏≠ Title] = { Id = id, Health = health, Reference = mob }
local selectedMonsterId = nil
local selectedMobData = nil
local autofarm = false

-- ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏∏‡πà‡∏° Star ‡πÅ‡∏•‡∏∞ Power
local autoStarEnabled = false
local autoPowerEnabled = false

-- ‡∏£‡∏µ‡πÄ‡∏ü‡∏≠‡πÄ‡∏£‡∏ô‡∏ã‡πå Server Event
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ToServer = ReplicatedStorage:WaitForChild("Events"):WaitForChild("To_Server")

-- ======= UI - Dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå =======
local monsterDropdown = Tabs.Main:AddDropdown("SelectMonster", {
    Title = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå",
    Values = {},
    Multi = false,
    Default = nil
})

monsterDropdown:OnChanged(function(title)
    selectedMobData = monsterMap[title]
    selectedMonsterId = selectedMobData and selectedMobData.Id

    Fluent:Notify({
        Title = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß",
        Content = "ID: " .. tostring(selectedMonsterId),
        Duration = 3
    })
end)

-- ======= UI - ‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå =======
Tabs.Main:AddButton({
    Title = "üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå",
    Callback = function()
        -- ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤
        monsterMap = {}
        selectedMonsterId = nil
        selectedMobData = nil
        monsterDropdown:SetValue(nil) -- ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤ Dropdown

        local titles = {}
        for _, mob in pairs(workspace.Debris.Monsters:GetChildren()) do
            local id = mob:GetAttribute("Monster_Id")
            local title = mob:GetAttribute("Title")
            local health = tonumber(mob:GetAttribute("Health"))

            if id and title and not monsterMap[title] then
                monsterMap[title] = {
                    Id = id,
                    Health = health or 0,
                    Reference = mob
                }
                table.insert(titles, title)
            end
        end

        monsterDropdown:SetValues(titles)

        Fluent:Notify({
            Title = "‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            Content = "‡∏û‡∏ö " .. #titles .. " ‡∏ï‡∏±‡∏ß\n(‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå)",
            Duration = 3
        })
    end
})

-- ======= UI - Toggle ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î AutoFarm =======
Tabs.Main:AddToggle("AutoFarmToggle", {
    Title = "üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏≤‡∏£‡πå‡∏°",
    Default = false,
    Callback = function(value)
        autofarm = value
    end
})

-- ======= UI - Toggle ‡∏™‡∏∏‡πà‡∏° Star =======
Tabs.Main:AddToggle("AutoStarToggle", {
    Title = "‚≠ê ‡∏™‡∏∏‡πà‡∏° Star ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥",
    Default = false,
    Callback = function(value)
        autoStarEnabled = value
    end
})

-- ======= UI - Toggle ‡∏™‡∏∏‡πà‡∏° Power =======
Tabs.Main:AddToggle("AutoPowerToggle", {
    Title = "‚ö° ‡∏™‡∏∏‡πà‡∏° Power ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥",
    Default = false,
    Callback = function(value)
        autoPowerEnabled = value
    end
})

-- ======= ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏ü‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå =======
local function setupTargetDeathListener(humanoid)
    if humanoid then
        -- ‡∏•‡∏ö tag ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
        if humanoid:FindFirstChild("__AutofarmDeath") then
            humanoid:FindFirstChild("__AutofarmDeath"):Destroy()
        end

        -- ‡∏™‡∏£‡πâ‡∏≤‡∏á tag ‡πÉ‡∏´‡∏°‡πà
        local tag = Instance.new("ObjectValue")
        tag.Name = "__AutofarmDeath"
        tag.Value = humanoid
        tag.Parent = humanoid

        humanoid.Died:Connect(function()
            currentTarget = nil
            hasWarped = false
        end)
    end
end

-- ======= ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ü‡∏≤‡∏£‡πå‡∏° =======
local RunService = game:GetService("RunService")
local currentTarget = nil
local hasWarped = false

-- ======= Loop ‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå =======
RunService.Heartbeat:Connect(function()
    if autofarm and selectedMonsterId then
        -- ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏´‡∏°
        if not currentTarget or not currentTarget.Parent then
            currentTarget = nil
            hasWarped = false
        end

        -- ‡∏´‡∏≤‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ
        if not currentTarget then
            for _, mob in pairs(workspace.Debris.Monsters:GetChildren()) do
                if mob:GetAttribute("Monster_Id") == selectedMonsterId then
                    local humanoid = mob:FindFirstChildOfClass("Humanoid")
                    if humanoid and humanoid.Health > 0 then
                        currentTarget = mob
                        setupTargetDeathListener(humanoid)
                        break
                    end
                end
            end
        end

        -- ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå
        if currentTarget and not hasWarped then
            local mobHRP = currentTarget:FindFirstChild("HumanoidRootPart")
            if mobHRP and character and character.PrimaryPart then
                local safeOffset = Vector3.new(0, 3, -2)
                character:SetPrimaryPartCFrame(mobHRP.CFrame + safeOffset)
                hasWarped = true
            end
        end
    else
        currentTarget = nil
        hasWarped = false
    end
end)

-- ======= Loop ‡∏™‡∏∏‡πà‡∏° Star ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ =======
task.spawn(function()
    while true do
        if autoStarEnabled then
            ToServer:FireServer({
                Open_Amount = 13,
                Action = "_Stars",
                Name = "Star_15"
            })
            print("‚≠ê ‡∏™‡∏∏‡πà‡∏° Star ‡πÅ‡∏•‡πâ‡∏ß")
            task.wait(2.5) -- ‡∏£‡∏≠‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏™‡∏∏‡πà‡∏°
        else
            task.wait(0.1)
        end
    end
end)

-- ======= Loop ‡∏™‡∏∏‡πà‡∏° Power ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ =======
task.spawn(function()
    while true do
        if autoPowerEnabled then
            ToServer:FireServer({
                Open_Amount = 4,
                Action = "_Gacha_Activate",
                Name = "Power_Energy_Runes"
            })
            print("‚ö° ‡∏™‡∏∏‡πà‡∏° Power ‡πÅ‡∏•‡πâ‡∏ß")
            task.wait(2.5) -- ‡∏£‡∏≠‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏™‡∏∏‡πà‡∏°
        else
            task.wait(0.1)
        end
    end
end)
