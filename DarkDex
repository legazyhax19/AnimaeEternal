-- ‡πÇ‡∏´‡∏•‡∏î Fluent GUI
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Window = Fluent:CreateWindow({
    Title = "AutoFarm",
    SubTitle = "By You",
    TabWidth = 160,
    Size = UDim2.fromOffset(520, 400),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "swords" })
}

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
local monsterMap = {} -- [‡∏ä‡∏∑‡πà‡∏≠ Title] = { Id = id, Health = health, Reference = mob }
local selectedMonsterId = nil
local selectedMobData = nil
local autofarm = false
local lastTarget = nil

-- Dropdown UI
local monsterDropdown = Tabs.Main:AddDropdown("SelectMonster", {
    Title = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå",
    Values = {},
    Multi = false,
    Default = nil
})

monsterDropdown:OnChanged(function(title)
    selectedMobData = monsterMap[title]
    selectedMonsterId = selectedMobData and selectedMobData.Id
    Fluent:Notify({
        Title = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß",
        Content = "ID: " .. tostring(selectedMonsterId),
        Duration = 3
    })
end)

-- ‡∏õ‡∏∏‡πà‡∏° Refresh ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå
Tabs.Main:AddButton({
    Title = "üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå",
    Callback = function()
        monsterMap = {}
        local titles = {}

        for _, mob in pairs(workspace.Debris.Monsters:GetChildren()) do
            local id = mob:GetAttribute("Monster_Id")
            local title = mob:GetAttribute("Title")
            local health = tonumber(mob:GetAttribute("Health"))

            if id and title and not monsterMap[title] then
                monsterMap[title] = {
                    Id = id,
                    Health = health or 0,
                    Reference = mob
                }
                table.insert(titles, title)
            end
        end

        monsterDropdown:SetValues(titles)
        Fluent:Notify({
            Title = "‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            Content = "‡∏û‡∏ö " .. #titles .. " ‡∏ï‡∏±‡∏ß",
            Duration = 3
        })
    end
})

-- Toggle ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î AutoFarm
Tabs.Main:AddToggle("AutoFarmToggle", {
    Title = "üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏≤‡∏£‡πå‡∏°",
    Default = false,
    Callback = function(value)
        autofarm = value
    end
})

-- ‡∏•‡∏π‡∏õ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏ï‡∏±‡∏ß‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏≠‡∏ô‡∏ï‡∏≤‡∏¢
local currentTarget = nil
local hasWarped = false -- ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á

task.spawn(function()
    while task.wait(0.1) do
        if autofarm and selectedMonsterId then
            -- ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ ‡πÉ‡∏´‡πâ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
            if not currentTarget or not currentTarget.Parent then
                currentTarget = nil
                hasWarped = false
                for _, mob in pairs(workspace.Debris.Monsters:GetChildren()) do
                    if mob:GetAttribute("Monster_Id") == selectedMonsterId then
                        local humanoid = mob:FindFirstChildOfClass("Humanoid")
                        if humanoid and humanoid.Health > 0 then
                            currentTarget = mob
                            break
                        end
                    end
                end
            end

            -- ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏´‡∏≤ ‡πÉ‡∏´‡πâ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
            if currentTarget and not hasWarped then
                local mobHRP = currentTarget:FindFirstChild("HumanoidRootPart")
                if mobHRP then
                    local offset = Vector3.new(0, 3, -2)
                    hrp.CFrame = mobHRP.CFrame + offset
                    hasWarped = true
                end
            end

            -- ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ï‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏´‡∏≤‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
            if currentTarget then
                local humanoid = currentTarget:FindFirstChildOfClass("Humanoid")
                if humanoid and humanoid.Health <= 0 then
                    currentTarget = nil
                    hasWarped = false
                end
            end
        else
            currentTarget = nil
            hasWarped = false
        end
    end
end)






